<UserControl x:Class="TestApp.Views.Dialogs.ActionEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:helpers="clr-namespace:TestApp.ViewModels.Helpers"
             mc:Ignorable="d"
             x:Name="This"
             DataContext="{Binding ElementName=This, Path=ViewModel}"
             Width="350" Height="450">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Views/Skins/MainSkin.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <materialDesign:DialogHost Identifier="ActionEditor">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <materialDesign:ColorZone Grid.Column="0" Grid.ColumnSpan="2"
                    Mode="PrimaryMid" Height="30"
                    Effect="{DynamicResource MaterialDesignShadowDepth3}">
                    </materialDesign:ColorZone>

                    <TextBlock Grid.Column="0"
                        Style="{StaticResource DialogCaptionTextBlock}"
                        Text="{Binding Title, FallbackValue='Редактор действий' }">
                    </TextBlock>

                    <Button
                        Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center"
                        Style="{DynamicResource DialogHeaderButtonStyle}"
                        Margin="0"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        <materialDesign:PackIcon Kind="WindowClose" Width="25" Height="25" />
                    </Button>

                </Grid>
            </StackPanel>

            <StackPanel Grid.Row="1" Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                        Style="{StaticResource SimpleTextStype}" HorizontalAlignment="Left"
                        Text="При изменении значения переменной" />

                    <TextBlock Grid.Row="1"
                        Style="{StaticResource SimpleTextStype}" HorizontalAlignment="Left"
                        Text="{Binding Variable.Name,
                        StringFormat='&quot;{0}&quot;:',
                        FallbackValue='VariableName'}" />
                </Grid>
            </StackPanel>

            <Expander Grid.Row="2"
                    HorizontalAlignment="Stretch"
                    Header="При выполнении условия">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0"
                            Visibility="{Binding HasCondition, Converter={StaticResource InverseBoolToVisConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                    Style="{StaticResource SimpleTextStype}"
                                    Text="Условие не задано"/>

                            <Button Grid.Column="1" Width="100"
                                    Style="{StaticResource DefaultButtonStyle}" HorizontalAlignment="Right"
                                    Command="{Binding AddConditionCommand}"
                                    Content="Добавить"/>
                        </Grid>
                    </StackPanel>

                    <StackPanel Grid.Row="1" Margin="25 5 5 5"
                            Visibility="{Binding HasCondition, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0"
                                    Style="{StaticResource SimpleTextStype}"
                                    Text="Если значение" />

                            <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="3" Margin="10 5 10 5"
                                    ItemsSource="{Binding ConditionOperands, Converter={StaticResource EnumToStringConverter}}">
                                <ComboBox.SelectedItem>
                                    <helpers:ConverterBindableParameter Binding="{Binding ConditionOperand, Mode=TwoWay}"
                                            Converter="{StaticResource EnumToStringConverter}"
                                            ConverterParameterBinding="{Binding ConditionOperandType}"/>
                                </ComboBox.SelectedItem>
                            </ComboBox>

                            <TextBox Grid.Row="0" Grid.Column="2"
                                    Style="{StaticResource SimpleEditType}"
                                    Text="{Binding ConditionValue, Mode=TwoWay}"
                                    Visibility="{Binding IsConditionHasInput, Converter={StaticResource BoolToVisibilityConverter}}" />

                            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                                    Style="{StaticResource DefaultButtonStyle}" HorizontalAlignment="Right"
                                    Content="Удалить"
                                    Command="{Binding RemoveConditionCommand}"/>
                        </Grid>
                    </StackPanel>

                </Grid>
            </Expander>

            <Expander Grid.Row="3"
                    HorizontalAlignment="Stretch"
                    IsExpanded="True"
                    Header="Выполнить действие">
                <StackPanel Margin="10">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="30" />
                            <RowDefinition Height="Auto" MinHeight="30" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!--#region Operation-->
                        <TextBlock Grid.Row="0" Grid.Column="0"
                            Style="{StaticResource ObjectBrowserTextStyle}"
                            Text="Операция:">
                        </TextBlock>

                        <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" SelectedIndex="3"
                            Margin="5 0 0 0"
                            ItemsSource="{Binding OperationNames, Converter={StaticResource EnumToStringConverter}}"
                            SelectedItem="{Binding Operation, Converter={StaticResource EnumToStringConverter}, Mode=TwoWay}">
                        </ComboBox>
                        <!--#endregion-->

                        <!--#region Target-->
                        <TextBlock Grid.Row="1" Grid.Column="0"
                            Style="{StaticResource ObjectBrowserTextStyle}" MaxWidth="80"
                            Text="{Binding TargetLabelText, FallbackValue='TargetName'}">
                        </TextBlock>

                        <TextBlock Grid.Row="1" Grid.Column="1"
                            Style="{StaticResource ObjectBrowserTextStyle}"
                            Text="Нет элементов"
                            Visibility="{Binding TargetIsEmpty, Converter={StaticResource BoolToVisibilityConverter}}">
                        </TextBlock>

                        <ComboBox Grid.Row="1" Grid.Column="1" SelectedIndex="0"
                            Margin="5 0 0 0"
                            ItemsSource="{Binding TargetNames}"
                            SelectedItem="{Binding TargetName, Mode=TwoWay}"
                            Visibility="{Binding TargetIsEmpty, Converter={StaticResource InverseBoolToVisConverter}}">
                        </ComboBox>

                        <Button Grid.Row="1" Grid.Column="2"
                            Style="{DynamicResource DialogHeaderButtonStyle}"
                            ToolTip="Добавить переменную"
                            Command="{Binding AddVariableCommand}"
                            Visibility="{Binding IsVariableBtnEnabled, Converter={StaticResource BoolToVisibilityConverter}}">
                            <materialDesign:PackIcon Kind="Add" />
                        </Button>
                        <!--#endregion-->

                        <!--#region Selectable value-->
                        <TextBlock Grid.Row="2" Grid.Column="0"
                            Style="{StaticResource ObjectBrowserTextStyle}"
                            Text="{Binding ResultLabelText, FallbackValue='Значение:'}"
                            Visibility="{Binding ValueIsList, Converter={StaticResource BoolToVisibilityConverter}}"/>

                        <ComboBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" SelectedIndex="0"
                            Margin="5 0 0 0"
                            ItemsSource="{Binding SelectableValues, Converter={StaticResource EnumToStringConverter}}"
                            Visibility="{Binding ValueIsList, Converter={StaticResource BoolToVisibilityConverter}}">
                            <ComboBox.SelectedItem>
                                <helpers:ConverterBindableParameter Binding="{Binding SelectableValue, Mode=TwoWay}"
                                Converter="{StaticResource EnumToStringConverter}"
                                ConverterParameterBinding="{Binding SelectableValueType}"/>
                            </ComboBox.SelectedItem>
                        </ComboBox>
                        <!--#endregion-->

                        <!--#region Text value-->
                        <TextBlock Grid.Row="3" Grid.Column="0"
                            Style="{StaticResource ObjectBrowserTextStyle}"
                            Text="Значение:"
                            Visibility="{Binding ValueIsString, Converter={StaticResource BoolToVisibilityConverter}}"/>

                        <TextBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"
                            Style="{StaticResource ObjectBrowserTextBoxStyle}" Margin="5 0 0 0"
                            Text="{Binding ResultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Visibility="{Binding ValueIsString, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <!--#endregion-->

                    </Grid>
                </StackPanel>

            </Expander>

            <materialDesign:ColorZone Grid.Row="4"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Mode="PrimaryLight"
                    Effect="{DynamicResource MaterialDesignShadowDepth3}">

                <StackPanel Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Width="120" HorizontalAlignment="Right" Margin="5"
                            Style="{StaticResource MaterialDesignRaisedButton}"
                            Content="Сохранить"
                            Visibility="{Binding HasChanges, Converter={StaticResource BoolToVisibilityConverter}}"
                            Command="{Binding SaveCommand}"/>

                        <Button Grid.Column="1" Width="120" HorizontalAlignment="Right" Margin="5"
                            Content="Отмена"
                            Command="{Binding DiscardChangesCommand}"/>

                    </Grid>
                </StackPanel>

            </materialDesign:ColorZone>

        </Grid>
    </materialDesign:DialogHost>
</UserControl>